{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","imdbUrlEror","setimdbUrlEror","imgUrlEror","setImgUrlEror","regExp","onSubmit","event","preventDefault","test","htmlFor","type","name","classname","required","placeholder","value","onChange","target","disabled","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b9bbea8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable no-useless-escape */\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport classname from 'classnames';\nimport './NewMovie.scss';\n\ninterface Prop {\n  addMovie: (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,) => void;\n}\n\nexport const NewMovie:React.FC<Prop> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [imdbUrlEror, setimdbUrlEror] = useState(false);\n  const [imgUrlEror, setImgUrlEror] = useState(false);\n\n  const regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const clearInput = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (regExp.test(imdbUrl) && regExp.test(imgUrl)) {\n      addMovie(title, description, imgUrl, imdbUrl, imdbId);\n      clearInput();\n      setimdbUrlEror(false);\n      setImgUrlEror(false);\n    } else if (regExp.test(imdbUrl) && !regExp.test(imgUrl)) {\n      setimdbUrlEror(false);\n      setImgUrlEror(true);\n    } else if (!regExp.test(imdbUrl) && regExp.test(imgUrl)) {\n      setimdbUrlEror(true);\n      setImgUrlEror(false);\n    } else {\n      setimdbUrlEror(true);\n      setImgUrlEror(true);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"titleName\">Add new movie</h2>\n\n      <label htmlFor=\"title\">Title</label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        className={classname('input', { 'is-primary': title, 'is-danger': !title })}\n        required\n        placeholder=\"Title\"\n        value={title}\n        onChange={(event) => (\n          setTitle(event.target.value)\n        )}\n      />\n      <label htmlFor=\"description\">Description</label>\n      <input\n        type=\"text\"\n        name=\"description\"\n        className={classname('input', { 'is-primary': description, 'is-danger': !description })}\n        required\n        placeholder=\"Description\"\n        value={description}\n        onChange={(event) => (\n          setDescription(event.target.value)\n        )}\n      />\n      <label htmlFor=\"imgUrl\">{!imgUrlEror ? 'ImgUrl' : 'Wrong ImgUrl !!!!!!!!!!' }</label>\n      <input\n        type=\"text\"\n        name=\"imgUrl\"\n        className={classname('input', { 'is-primary': imgUrl || !imgUrlEror, 'is-danger': !imgUrl || imgUrlEror })}\n        required\n        placeholder=\"ImgUrl\"\n        value={imgUrl}\n        onChange={(event) => (\n          setImgUrl(event.target.value)\n        )}\n      />\n      <label htmlFor=\"imdbUrl\">{!imdbUrlEror ? 'ImdbUrl' : 'Wrong ImdbUrl !!!!!!!!' }</label>\n      <input\n        type=\"text\"\n        name=\"imdbUrl\"\n        className={classname('input', { 'is-primary': imdbUrl || !imdbUrlEror, 'is-danger': !imdbUrl || imdbUrlEror })}\n        required\n        placeholder=\"ImdbUrl\"\n        value={imdbUrl}\n        onChange={(event) => (\n          setImdbUrl(event.target.value)\n        )}\n      />\n      <label htmlFor=\"imdbId\">ImdbId</label>\n      <input\n        type=\"text\"\n        name=\"imdbId\"\n        className={classname('input', { 'is-primary': imdbId, 'is-danger': !imdbId })}\n        required\n        placeholder=\"ImdbId\"\n        value={imdbId}\n        onChange={(event) => (\n          setImdbId(event.target.value)\n        )}\n      />\n      {imdbUrlEror}\n      <button\n        type=\"submit\"\n        className=\"button is-primary\"\n        disabled={!title || !description || !imgUrl || !imdbId || !imdbUrl}\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  ) => {\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    setMovies((currentMovies) => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}